/* 
Name: Rachel Shindelus  
Date: 11/07/2022
Description: This program provides a game for the user to play against the computer. The computer chooses a number within the range given by the user and prompts the user to guess that number. 
Grade: I believe I should receive 100% for this assingment as I have completed the assignment and done everything required. 
*/

import java.util.*;
import java.util.Random;
import java.io.*;
public class GameShindelus { /* NO CODE HERE */ }

class Game {    
   public static void main(String[] args) {  // Provided code, don't change
      Scanner kb = new Scanner(System.in);
      interact(kb);
      action(kb);
   }
   
     /* 
     The purpose for this method is to ask the user to enter a positive integer value
     This method gets two paramters Scanner and a string. The string s holds the message being displayed for the user
     This method asks the user to enter a positive number. 
     As long as the entered value is not positive, the method will keep asking the user
      */  
   public static int prompt(Scanner kb, String s)    {
       int userInputNum = -1;                                       // Declare a variable of type int to hold users input
       System.out.println(s);                                       // Display String s
       System.out.print("Enter a postive integer value: ");       // Prompt user to enter a positive integer value
       while (userInputNum < 0)  {                                  // While loop to repeat if user doesn't enter a positive number
         userInputNum = kb.nextInt();                               // Store users input in the variable
         if(userInputNum < 0) {
            System.out.println("Invalid input, enter a positive integer value. ");  // Error code displaying the the input is not valid
         }
       }
      return userInputNum;
   }
   
   /* 
   This method displays the intro given in the sample output. It must match excatly with the sample output. Refer to the provided output
   */
   public static void interact(Scanner kb)   {
   System.out.print("Hello, I am a computer playing a guessing game with you. What would you like to call me? ");
   String computerName = kb.next();
   for (int i = 0; i < 80; i++)  
      System.out.print("-");
   System.out.println(" ");
   System.out.print("Wow I really like the name " + computerName + "\n"
                    + "What is your name: ");
   String usersName = kb.next();
   System.out.println("Hey " + usersName + " I am excited to play the guessing game with you \n"
                    + "I will think of a number between a low  and a high values enerted by you \n" 
                    + "and will allow you to guess until you get it. \n"
                    + "For each guess, I will give you a hint whether the \n"
                    + "right answer is higher or lower than your guess.");
   for (int i = 0; i < 80; i++)  
      System.out.print("-");
   System.out.println(" ");
   }
    /* 
    this method gets two numbers called guess and randNum
    if guess is greater than randNum then return "Lower"
    else if guess is less than randNum return "Higher"
    else return match
    */
   public static String match(int guess, int randNum)    {
      if (guess > randNum)
         return "Lower";
      else if (guess < randNum)
         return "Higher";
      else
         return "Match"; 
   }
/*
  this method displays the result on the screen. 
  This method gets two parameters representing the number of the games the person played and the total guesses 
  made for all the games played
*/
   public static void report(int numGames, int totGuesses)    {
      System.out.println("Overall Results: \n"
                       + "\t Total Games = " + numGames + "\n"
                       + "\t Total Guesses = " + totGuesses);
   }
   
   /*
     This method plays the game. it will generate a random number between min and max.
     asks the user to guess the number generated by the computer. As long as the user is not making the correct guess
     will keep propmting the user. Once the user makes a correct guess, it will end the game
     Also it keeps track of the number of the guesses that the user has made. 
     Return: This method returns the number of the guesses the person made 
     Refer to the sample output
    */ 
   public static int funGame(Scanner console, int min, int max)    {
   Random rand = new Random();                     // create a Random class object
   int randNum = rand.nextInt(max - 1) + min;      // Generate a random number between the given  min and max and store it in a variable. This variable is holding the computer pick
   int usersGuess = 0;                             // Declare a variable to hold the user's guess, initialize it to zero
   int numOfGuesses = 0;                           // Declare a variable to hold the number of the guesses the person will make per game, set it to zero
   // Flush the buffer
   System.out.println("I am thinking of a number between " + min + " and " + max + "...");     // Prompt the user that I am thinking of a numbr between min and max. the actual min and max values must be displayed(refer to the sample output
   System.out.println("Give me a few seconds to think, then enter any key to continue: ");     // Display the message saying give me a few seconds to think , then enter any key to continue
   // Flush the buffer
   while ( usersGuess != randNum)    {             // While the user's guess does not equal the computer pick
      numOfGuesses++;                              // Increment the variable declared in step 4
      System.out.print("Guess? ");                 // Prompt the user to enter a  guess
      usersGuess = console.nextInt();              // Read the user's input and store the user's input in the variable you declared at step 3
      match(usersGuess, randNum);                  // Call the  method match and store the return of this method in a variable called result
      if (match(usersGuess, randNum) == "Match") { // If thevariable result contains "match"
        System.out.println("*******Congratulations! You got it right in " + numOfGuesses + " guesses");     // Display the congrat message
      }       
      else      
         System.out.println(match(usersGuess, randNum));       // Display the the content of the variable result                 
      }     //end of while loop
      System.out.println();
      return numOfGuesses;
     }
     
    /* This method calls the other methods to get the game started.*/
   public static void action(Scanner console)     {      
      int numGames = 0;                         // total number of the games played by the person
      int totGuesses = 0;                       // total guesses for all the games played
      int min = 0;                              // holds the min value entered by the user
      int max = 0 ;                             // holds the max value entered by the user
      String repeat = "yes";           
      while (repeat.equalsIgnoreCase("yes")) {  // allows the player to play many rounds of the game
         String s = "Enter a low value :";
         min = prompt(console, s);              // Call the method prompt and pass the console, and s value to it, store the result in the vaiable min 
         String s1 = "Enter the high value:";
         max = prompt(console, s1);             // Call the method prompt and pass console, and s1 value to it, store the result in the vaiable max
         while (max < min) {                    // While max is less than min  
            System.out.println("You entered an invalid value for max. Max must be greater than min. lets start all over again\n");
            prompt(console, s);                 // Call the method prompt and pass  console and s
            prompt(console, s1);                // Call the method prompt and pass console and s1
         }  //end while
       int guesses = funGame(console, min, max);   //call the method funGame with the proper parameters and store the result in a variable called guesses
       totGuesses += guesses;                   //add the guesses to totGusses
       numGames++;                              //increment numGames
       System.out.print("Do you want to play again: ");    //prompt the user if they want to play again or not
       repeat = console.next();                 //read the user's respond in the varibale repeat
       System.out.print(" ");
      }
     report(numGames, totGuesses);              //call the method report and pass numGames and totGusses
 
   }
}